# This workflow will build and push to Platform.sh
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create a Platform.sh project.
#    Reference: https://docs.platform.sh/gettingstarted/own-code/create-project.html
#               https://docs.platform.sh/gettingstarted/template/create-project.html
#               https://console.platform.sh/
#
# 2. Create a Platform.sh API Tokens
#    https://docs.platform.sh/development/cli/api-tokens.html
#
# 3. Generate a Githu token
#    https://docs.platform.sh/administration/integrations/github.html
#    https://github.com/settings/tokens/new
#
# 4. Store an IAM user access key in GitHub Actions secrets named `PLATFORM_AUTHENTICATION`,`PLATFORM_PROJECT_ID` and `GITHUB_TOKEN`.
#    See the documentation for each action used below for the recommended IAM policies for this IAM user,
#    and best practices on handling the access key credentials.

name: Deploy on Platform.sh

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Deploy with Platform.sh
      env:
       HEADER: 'Content-Type: application/json'
       PLATFORM_AUTHENTICATION: ${{ secrets.PLATFORM_AUTHENTICATION }}
       PLATFORM_PROJECT_ID: ${{ secrets.PLATFORM_PROJECT_ID }}
       AUTHENCICATION:  "Authorization: Bearer $PLATFORM_AUTHENTICATION"
       GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
       GITHUB_REPOSITORY: ${{ github.repository}}
       HOST: https://api.platform.sh//projects/$PLATFORM_PROJECT_ID/integrations
       BODY: '{"type": "GithubIntegrationCreateInput", "token": $GITHUB_TOKEN, "repository": $GITHUB_REPOSITORY}'
      run: curl -d $BODY -H $HEADER -H AUTHENCICATION -X GET $HOST
